# Acme-Frobnitz

Acme-Frobnitz is a comprehensive toolset for managing downloads, storing metadata, and watermarking. It integrates Python and Perl scripts with a structured directory system, making it easy to use, extend, and distribute.

---

## Directory Structure

### Top-Level Files
- **Changes**: Tracks major changes in the project.
- **Dockerfile**: Instructions for building a Docker image.
- **ignore.txt**: Specifies files to exclude from certain processes.
- **Makefile/Makefile.PL**: Build instructions for Perl components.
- **MANIFEST**: Lists all files included in the project.
- **MYMETA.json/MYMETA.yml**: Metadata files generated during builds.
- **README**: This file, explaining the project.
- **requirements.txt**: Lists Python dependencies.

### Subdirectories
#### `bin`
Contains executable scripts and related configuration files.
- `2.driver.pl`: perl driver 
- `4.caller.py`: Python script for yt.
- `8.wrap.sh`: bash script for wrapping calls.
- `conf/`: Stores configuration files (e.g., `app_config.json`).
- `data/`: Directory for input/output data.
- `docker_startup.log`: Logs Docker-related startup processes.

#### `blib`
Stores Perl build artifacts.

#### `conf`
- **app_config.json**: Primary configuration file for the application.

#### `lib`
Houses libraries for both Perl and Python.
- **Acme/Frobnitz.pm**: Main Perl module.
- **python_utils/**: Python libraries including:
  - `downloader5.py`
  - `utilities1.py`

#### `logs`
- **acme-frobnitz.log**: Application log file.

#### `t`
Test files for validating components.
- Includes tests for downloads, manifests, and POD coverage.

#### `xt`
Extra test files, such as boilerplate tests.

---

## Getting Started

### Prerequisites
- **Python**: Install Python 3.x and the dependencies in `requirements.txt`.
  ```bash
  pip install -r requirements.txt
  ```
- **Perl**: Ensure Perl is installed along with `ExtUtils::MakeMaker` or similar tools.
  ```bash
  cpan ExtUtils::MakeMaker
  ```
- **Docker**: If using Docker, ensure it is installed and configured.

### Installation
Clone the repository and navigate to the project directory:
```bash
git clone <repository-url>
cd Acme-Frobnitz
```


### Configuration
Edit `conf/app_config.json` to set application-specific configurations.



## Testing
Run tests in the `t` directory:
```bash
prove -l t/
```
Run extra tests in the `xt` directory:
```bash
prove -l xt/
```

---

## Contributing
1. Fork the repository.
2. Create a feature branch:
   ```bash
   git checkout -b feature/your-feature-name
   ```
3. Commit your changes:
   ```bash
   git commit -m "Add your feature"
   ```
4. Push to the branch:
   ```bash
   git push origin feature/your-feature-name
   ```
5. Open a Pull Request.

---

## License
This project is licensed under the MIT License. See the `LICENSE` file for details.

---

## Troubleshooting
For issues, check the following:
1. Logs in `logs/acme-frobnitz.log`.
2. Docker logs (if applicable):
   ```bash
   docker logs <container-id>
   ```
3. Ensure all dependencies are installed.

For further assistance, contact the project maintainer or submit an issue in the repository.


